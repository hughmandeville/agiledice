{"ast":null,"code":"var _jsxFileName = \"/Users/hughmandeville/projects/agiledice/src/index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport DiceRow from \"./DiceRow\";\nimport * as serviceWorker from \"./serviceWorker\"; // die values\n\nconst diceRows = [[1, 1], [2, 2], [3, 3], [4, 4]];\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n}, diceRows.map((n, i) => /*#__PURE__*/React.createElement(DiceRow, {\n  id: i,\n  row: n,\n  key: \"row-\" + i,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }\n}))), document.getElementById(\"board\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/hughmandeville/projects/agiledice/src/index.js"],"names":["React","useState","ReactDOM","DiceRow","serviceWorker","diceRows","render","map","n","i","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,CACf,CAAC,CAAD,EAAI,CAAJ,CADe,EAEf,CAAC,CAAD,EAAI,CAAJ,CAFe,EAGf,CAAC,CAAD,EAAI,CAAJ,CAHe,EAIf,CAAC,CAAD,EAAI,CAAJ,CAJe,CAAjB;AAOAH,QAAQ,CAACI,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,QAAQ,CAACE,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,kBACZ,oBAAC,OAAD;AAAS,EAAA,EAAE,EAAEA,CAAb;AAAgB,EAAA,GAAG,EAAED,CAArB;AAAwB,EAAA,GAAG,EAAE,SAASC,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADH,CADF,EAMEC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CANF,E,CASA;AACA;AACA;;AACAP,aAAa,CAACQ,UAAd","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport DiceRow from \"./DiceRow\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// die values\nconst diceRows = [\n  [1, 1],\n  [2, 2],\n  [3, 3],\n  [4, 4],\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    {diceRows.map((n, i) => (\n      <DiceRow id={i} row={n} key={\"row-\" + i} />\n    ))}\n  </React.StrictMode>,\n  document.getElementById(\"board\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}