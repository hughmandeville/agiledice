{"ast":null,"code":"var _jsxFileName = \"/Users/hughmandeville/projects/agiledice/src/DiceRow.js\";\nimport React from \"react\";\nimport \"./DiceRow.css\";\n\nconst createArray = length => [...Array(length)];\n\nfunction DiceRow(row) {\n  /*\n  createArray(2).map((n, i) => (\n    <div key={\"row-\" + row + \"-die-\" + i} className=\"die\">\n      1\n    </div>\n  ));\n  */\n\n  /*\n    let dicePerSet = 2;\n  var rows = [];\n  for (var i = 0; i < dicePerSet; i++) {\n    let key = \"row-\" + row + \"-die-\" + (i + 1);\n    rows.push(\n      <div key={key} className=\"die\">\n        1\n      </div>\n    );\n  }\n  */\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: \"dicerow-1\",\n    className: \"set\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"set_text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), createArray(2).map((n, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: \"row-\" + row + \"-die-\" + i,\n    className: \"die\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"1\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"equals\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"=\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"set_total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"2\"));\n}\n\nexport default DiceRow;","map":{"version":3,"sources":["/Users/hughmandeville/projects/agiledice/src/DiceRow.js"],"names":["React","createArray","length","Array","DiceRow","row","map","n","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;AAEA,MAAMC,WAAW,GAAIC,MAAD,IAAY,CAAC,GAAGC,KAAK,CAACD,MAAD,CAAT,CAAhC;;AAEA,SAASE,OAAT,CAAiBC,GAAjB,EAAsB;AACpB;;;;;;;;AAOA;;;;;;;;;;;;AAYA,sBACE;AAAK,IAAA,GAAG,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGJ,WAAW,CAAC,CAAD,CAAX,CAAeK,GAAf,CAAmB,CAACC,CAAD,EAAIC,CAAJ,kBAClB;AAAK,IAAA,GAAG,EAAE,SAASH,GAAT,GAAe,OAAf,GAAyBG,CAAnC;AAAsC,IAAA,SAAS,EAAC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADD,CAFH,eAOE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPF,eAQE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARF,CADF;AAYD;;AAED,eAAeJ,OAAf","sourcesContent":["import React from \"react\";\nimport \"./DiceRow.css\";\n\nconst createArray = (length) => [...Array(length)];\n\nfunction DiceRow(row) {\n  /*\n  createArray(2).map((n, i) => (\n    <div key={\"row-\" + row + \"-die-\" + i} className=\"die\">\n      1\n    </div>\n  ));\n  */\n  /*\n    let dicePerSet = 2;\n  var rows = [];\n  for (var i = 0; i < dicePerSet; i++) {\n    let key = \"row-\" + row + \"-die-\" + (i + 1);\n    rows.push(\n      <div key={key} className=\"die\">\n        1\n      </div>\n    );\n  }\n  */\n  return (\n    <div key=\"dicerow-1\" className=\"set\">\n      <input type=\"text\" className=\"set_text\" />\n      {createArray(2).map((n, i) => (\n        <div key={\"row-\" + row + \"-die-\" + i} className=\"die\">\n          1\n        </div>\n      ))}\n      <div className=\"equals\">=</div>\n      <div className=\"set_total\">2</div>\n    </div>\n  );\n}\n\nexport default DiceRow;\n"]},"metadata":{},"sourceType":"module"}